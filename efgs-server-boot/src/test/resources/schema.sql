DROP SCHEMA IF EXISTS DPPPT CASCADE;
CREATE SCHEMA DPPPT;

CREATE SEQUENCE DPPPT.SQ_NM_ID_BATCH_JOB_EXECUTION;
CREATE SEQUENCE DPPPT.SQ_NM_DOWNLOAD_EXECUTION;
CREATE SEQUENCE DPPPT.SQ_NM_UPLOAD_KEYS_EXECUTION;

CREATE TABLE DPPPT.BATCH_JOB_EXECUTION (
    NM_JOB_EXECUTION_ID INTEGER DEFAULT nextval('DPPPT.SQ_NM_ID_BATCH_JOB_EXECUTION'),
    DE_JOB_NAME         CHAR VARYING(64),
    FC_START_TIME       TIMESTAMP DEFAULT now(),
    FC_END_TIME         TIMESTAMP NULL,
    DE_STATUS           CHAR VARYING(10) DEFAULT 'STARTED',
    DE_MESSAGE          CHAR VARYING(256),
    CONSTRAINT PK_BATCH_JOB_EXECUTION
        PRIMARY KEY (NM_JOB_EXECUTION_ID)
);

CREATE TABLE DPPPT.DOWNLOAD_EXECUTION (
    NM_DOWNLOAD_ID      INTEGER DEFAULT nextval('DPPPT.SQ_NM_DOWNLOAD_EXECUTION'),
    NM_JOB_EXECUTION_ID INTEGER,
	FC_CREATED_AT		TIMESTAMP DEFAULT now(),
    FC_DOWNLOAD_DATE    TIMESTAMP,
	DE_BATCH_TAG		CHAR VARYING(64),
	DE_NEXT_BATCH_TAG	CHAR VARYING(64),
	DE_MESSAGE          CHAR VARYING(128),
    IN_SUCCESS          BOOLEAN DEFAULT FALSE,
    CONSTRAINT PK_DOWNLOAD_EXECUTION
        PRIMARY KEY (NM_DOWNLOAD_ID),
    CONSTRAINT FK_DOWNLOAD_BATCH_JOB
        FOREIGN KEY (NM_JOB_EXECUTION_ID)
            REFERENCES DPPPT.BATCH_JOB_EXECUTION (NM_JOB_EXECUTION_ID)
);

CREATE TABLE DPPPT.UPLOAD_KEYS_EXECUTION (
    NM_UPLOAD_KEYS_ID   INTEGER DEFAULT nextval('DPPPT.SQ_NM_UPLOAD_KEYS_EXECUTION'),
    NM_JOB_EXECUTION_ID INTEGER NOT NULL,
    FC_UPLOAD_DATE      TIMESTAMP DEFAULT now() NOT NULL,
    DE_BATCH_TAG        CHAR VARYING(64),
    DE_BATCH_SIGNATURE  CHAR VARYING(4096),
    DE_MESSAGE          CHAR VARYING(128),
    IN_SUCCESS          BOOLEAN DEFAULT FALSE,
    CONSTRAINT PK_UPLOAD_KEYS_EXECUTION
        PRIMARY KEY (NM_UPLOAD_KEYS_ID),
    CONSTRAINT UNQ_UPLOAD_KEYS_BATCH_TAG
        UNIQUE (DE_BATCH_TAG),
    CONSTRAINT FK_UPLOAD_KEYS_BATCH_JOB
        FOREIGN KEY (NM_JOB_EXECUTION_ID)
            REFERENCES DPPPT.BATCH_JOB_EXECUTION (NM_JOB_EXECUTION_ID)
);

CREATE TABLE DPPPT.T_GAEN_EXPOSED(
 PK_EXPOSED_ID           SERIAL NOT NULL,
 KEY                     VARCHAR(24) NOT NULL,
 ROLLING_START_NUMBER    INT NOT NULL,
 ROLLING_PERIOD          INT NOT NULL,
 TRANSMISSION_RISK_LEVEL INT NOT NULL,
 RECEIVED_AT             TIMESTAMP WITH TIME ZONE DEFAULT NOW() NOT NULL,
 COUNTRY_ORIGIN          CHAR(2),
 REPORT_TYPE             SMALLINT,
 DAYS_SINCE_ONSET        SMALLINT,
 EFGS_SHARING            BOOLEAN,
 BATCH_TAG               CHAR VARYING(128)
);

ALTER SEQUENCE DPPPT.SQ_NM_ID_BATCH_JOB_EXECUTION
    OWNED BY DPPPT.BATCH_JOB_EXECUTION.NM_JOB_EXECUTION_ID;

ALTER SEQUENCE DPPPT.SQ_NM_DOWNLOAD_EXECUTION
    OWNED BY DPPPT.DOWNLOAD_EXECUTION.NM_DOWNLOAD_ID;

ALTER SEQUENCE DPPPT.SQ_NM_UPLOAD_KEYS_EXECUTION
    OWNED BY DPPPT.UPLOAD_KEYS_EXECUTION.NM_UPLOAD_KEYS_ID;
	
ALTER TABLE DPPPT.T_GAEN_EXPOSED ADD CONSTRAINT PK_T_GAEN_EXPOSED PRIMARY KEY (PK_EXPOSED_ID);

ALTER TABLE DPPPT.T_GAEN_EXPOSED ADD CONSTRAINT GAEN_EXPOSED_KEY UNIQUE (KEY);

CREATE INDEX IN_EFGS_BATCH_JOB_EXECUTION_START_TIME
    ON DPPPT.BATCH_JOB_EXECUTION(FC_START_TIME);
	
CREATE INDEX IN_EFGS_DOWNLOAD_SUCCESS_DOWNLOAD_DATE_CREATED_AT
    ON DPPPT.DOWNLOAD_EXECUTION(IN_SUCCESS, FC_DOWNLOAD_DATE, FC_CREATED_AT);

CREATE INDEX IN_EFGS_DOWNLOAD_SUCCESS_DOWNLOAD_DATE_BATCH_TAG
    ON DPPPT.DOWNLOAD_EXECUTION(IN_SUCCESS, FC_DOWNLOAD_DATE, DE_BATCH_TAG);

CREATE INDEX IN_EFGS_UPLOAD_KEYS_SUCCESS
    ON DPPPT.UPLOAD_KEYS_EXECUTION(IN_SUCCESS);

CREATE INDEX IN_EFGS_UPLOAD_KEYS_BATCH_TAG
    ON DPPPT.UPLOAD_KEYS_EXECUTION(DE_BATCH_TAG);
	
CREATE INDEX IN_GAEN_EXPOSED_COUNTRY_SHARING_RECEIVED
    ON DPPPT.T_GAEN_EXPOSED(COUNTRY_ORIGIN, EFGS_SHARING, RECEIVED_AT);
	
CREATE INDEX IN_GAEN_EXPOSED_COUNTRY_SHARING_BATCH_TAG
    ON DPPPT.T_GAEN_EXPOSED(COUNTRY_ORIGIN, EFGS_SHARING, BATCH_TAG);


